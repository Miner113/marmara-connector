name: Build Marmara Connector

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build and Run in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app python:3.6 bash -c "
          apt update &&
          apt install -y --no-install-recommends libcurl4-openssl-dev libssl-dev python3-dev python3-pip python3-venv qttools5-dev-tools python3-pyqt5 ruby ruby-dev rubygems build-essential &&
          gem install --no-document fpm &&
          pip install --upgrade pip wheel &&
          pip install -r requirements.txt &&
          fbs freeze &&
          fbs installer"

      - name: Upload a Build Artifact (Linux AppImage)
        uses: actions/upload-artifact@v4.0.0
        with:
          path: target/*.deb
          retention-days: 7
      
      - name: Upload a Build Artifact (Linux Portable)
        uses: actions/upload-artifact@v4.0.0
        with:
          path: target/MarmaraConnector-*
          retention-days: 7

  build_Windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: "3.6.x"
      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          python -m pip install pywin32
          pip install wheel
          pip install -r requirements.txt
      - name: Run fbs and freeze app
        shell: powershell
        run: |
          fbs freeze
          fbs installer

      - name: Upload a Build Artifact (Windows executable)
        uses: actions/upload-artifact@v4.0.0
        with:
          path: .\target\*.exe
          retention-days: 7
      
      - name: Upload a Build Artifact (Windows Portable)
        uses: actions/upload-artifact@v4.0.0
        with:
          path: .\target\MarmaraConnector*
          retention-days: 7
